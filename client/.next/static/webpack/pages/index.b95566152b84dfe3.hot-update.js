"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/features/toggle-blocking/ui/toggle-blocking-button.tsx":
/*!********************************************************************!*\
  !*** ./src/features/toggle-blocking/ui/toggle-blocking-button.tsx ***!
  \********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToggleBlockingButton: function() { return /* binding */ ToggleBlockingButton; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var _shared_ui_ui_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/shared/ui/ui-button */ \"./src/shared/ui/ui-button.tsx\");\n/* harmony import */ var _model_use_toggle_blocking__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../model/use-toggle-blocking */ \"./src/features/toggle-blocking/model/use-toggle-blocking.tsx\");\n\nvar _s = $RefreshSig$();\n\n\nfunction ToggleBlockingButton() {\n    _s();\n    const { isBlockingEnabled, ToggleBlocking, isReady } = (0,_model_use_toggle_blocking__WEBPACK_IMPORTED_MODULE_2__.useToggleBlocking)();\n    if (!isReady) {\n        return null;\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_shared_ui_ui_button__WEBPACK_IMPORTED_MODULE_1__.UiButton, {\n        onClick: ToggleBlocking,\n        variant: isBlockingEnabled ? \"primary\" : \"outlined\",\n        children: isBlockingEnabled ? \"Disable blocking\" : \"Enable blocking\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\jkmuf_000\\\\Desktop\\\\extensionAPP\\\\client\\\\src\\\\features\\\\toggle-blocking\\\\ui\\\\toggle-blocking-button.tsx\",\n        lineNumber: 12,\n        columnNumber: 5\n    }, this);\n}\n_s(ToggleBlockingButton, \"YxudyoiTTx6eCeRbUpfjMmh4PJo=\", false, function() {\n    return [\n        _model_use_toggle_blocking__WEBPACK_IMPORTED_MODULE_2__.useToggleBlocking\n    ];\n});\n_c = ToggleBlockingButton;\nvar _c;\n$RefreshReg$(_c, \"ToggleBlockingButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZmVhdHVyZXMvdG9nZ2xlLWJsb2NraW5nL3VpL3RvZ2dsZS1ibG9ja2luZy1idXR0b24udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRDtBQUNnQjtBQUUxRCxTQUFTRTs7SUFDZCxNQUFNLEVBQUNDLGlCQUFpQixFQUFFQyxjQUFjLEVBQUVDLE9BQU8sRUFBQyxHQUFHSiw2RUFBaUJBO0lBRXRFLElBQUksQ0FBQ0ksU0FBUztRQUNaLE9BQU87SUFDVDtJQUVBLHFCQUNFLDhEQUFDTCwwREFBUUE7UUFBQ00sU0FBU0Y7UUFBZ0JHLFNBQVNKLG9CQUFvQixZQUFZO2tCQUN6RUEsb0JBQW9CLHFCQUFxQjs7Ozs7O0FBR2hEO0dBWmdCRDs7UUFDdUNELHlFQUFpQkE7OztLQUR4REMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2ZlYXR1cmVzL3RvZ2dsZS1ibG9ja2luZy91aS90b2dnbGUtYmxvY2tpbmctYnV0dG9uLnRzeD83NTVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVpQnV0dG9uIH0gZnJvbSBcIkAvc2hhcmVkL3VpL3VpLWJ1dHRvblwiO1xyXG5pbXBvcnQgeyB1c2VUb2dnbGVCbG9ja2luZyB9IGZyb20gXCIuLi9tb2RlbC91c2UtdG9nZ2xlLWJsb2NraW5nXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gVG9nZ2xlQmxvY2tpbmdCdXR0b24oKSB7XHJcbiAgY29uc3Qge2lzQmxvY2tpbmdFbmFibGVkLCBUb2dnbGVCbG9ja2luZywgaXNSZWFkeX0gPSB1c2VUb2dnbGVCbG9ja2luZygpO1xyXG5cclxuICBpZiAoIWlzUmVhZHkpIHtcclxuICAgIHJldHVybiBudWxsXHJcbiAgfVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFVpQnV0dG9uIG9uQ2xpY2s9e1RvZ2dsZUJsb2NraW5nfSB2YXJpYW50PXtpc0Jsb2NraW5nRW5hYmxlZCA/IFwicHJpbWFyeVwiIDogXCJvdXRsaW5lZFwifT5cclxuICAgICAge2lzQmxvY2tpbmdFbmFibGVkID8gXCJEaXNhYmxlIGJsb2NraW5nXCIgOiBcIkVuYWJsZSBibG9ja2luZ1wifVxyXG4gICAgPC9VaUJ1dHRvbj5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJVaUJ1dHRvbiIsInVzZVRvZ2dsZUJsb2NraW5nIiwiVG9nZ2xlQmxvY2tpbmdCdXR0b24iLCJpc0Jsb2NraW5nRW5hYmxlZCIsIlRvZ2dsZUJsb2NraW5nIiwiaXNSZWFkeSIsIm9uQ2xpY2siLCJ2YXJpYW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/features/toggle-blocking/ui/toggle-blocking-button.tsx\n"));

/***/ })

});